<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<description>Spring MVC Configuration</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:global.properties" />

	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
			<!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list><value>application/json;charset=UTF-8</value></list>
				</property>
				<property name="prettyPrint" value="false"/>
				<property name="objectMapper">
					<bean class="com.cs.core.common.mapper.JsonMapper"></bean>
				</property>
			</bean>-->
			<!-- 使用XML格式输出数据 -->
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes" >
			<map>
				<entry key="xml" value="application/xml"/>
				<entry key="json" value="application/json"/>
			</map>
		</property>
		<property name="ignoreAcceptHeader" value="true"/>
		<property name="favorPathExtension" value="true"/>
	</bean>

	<!-- 定义视图文件解析 -->
	<!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
		<!--<property name="prefix" value="${web.view.prefix}"/>-->
		<!--<property name="suffix" value="${web.view.suffix}"/>-->
	<!--</bean>-->

	<!--<bean id="templateResolver"-->
		  <!--class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">-->
		<!--<property name="prefix" value="${web.view.prefix}" />-->
		<!--<property name="suffix" value="${web.view.suffix}" />-->
		<!--<property name="templateMode" value="HTML5" />-->
	<!--</bean>-->

	<!--<bean id="templateEngine"-->
		  <!--class="org.thymeleaf.spring4.SpringTemplateEngine">-->
		<!--<property name="templateResolver" ref="templateResolver" />-->
	<!--</bean>-->

	<!--<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">-->
		<!--<property name="templateEngine" ref="templateEngine" />-->
		<!--<property name="order" value="1" />-->
		<!--<property name="viewNames" value="*.html,*.xhtml" />-->
	<!--</bean>-->

	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />

	<!-- 静态资源映射 -->
	<mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>

	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:${web.view.index}"/>

	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->
	<!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="${web.maxUploadSize}" />
	</bean>-->

</beans>